// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/service.proto

package moviedownloader

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Movie struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Codec                string   `protobuf:"bytes,3,opt,name=codec,proto3" json:"codec,omitempty"`
	Runtime              string   `protobuf:"bytes,4,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Extension            string   `protobuf:"bytes,5,opt,name=extension,proto3" json:"extension,omitempty"`
	Resolution           string   `protobuf:"bytes,6,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Size                 string   `protobuf:"bytes,7,opt,name=size,proto3" json:"size,omitempty"`
	PostDate             string   `protobuf:"bytes,8,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Subject              string   `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	Group                string   `protobuf:"bytes,10,opt,name=group,proto3" json:"group,omitempty"`
	AudioLanguages       []string `protobuf:"bytes,11,rep,name=audio_languages,json=audioLanguages,proto3" json:"audio_languages,omitempty"`
	FullResolution       string   `protobuf:"bytes,12,opt,name=full_resolution,json=fullResolution,proto3" json:"full_resolution,omitempty"`
	Height               string   `protobuf:"bytes,13,opt,name=height,proto3" json:"height,omitempty"`
	Width                string   `protobuf:"bytes,14,opt,name=width,proto3" json:"width,omitempty"`
	Bps                  int32    `protobuf:"varint,15,opt,name=bps,proto3" json:"bps,omitempty"`
	SampleRate           int32    `protobuf:"varint,16,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	Fps                  float64  `protobuf:"fixed64,17,opt,name=fps,proto3" json:"fps,omitempty"`
	AudioCodec           string   `protobuf:"bytes,18,opt,name=audio_codec,json=audioCodec,proto3" json:"audio_codec,omitempty"`
	Poster               string   `protobuf:"bytes,19,opt,name=poster,proto3" json:"poster,omitempty"`
	PrimaryUrl           string   `protobuf:"bytes,20,opt,name=primary_url,json=primaryUrl,proto3" json:"primary_url,omitempty"`
	FallbackUrl          string   `protobuf:"bytes,21,opt,name=fallback_url,json=fallbackUrl,proto3" json:"fallback_url,omitempty"`
	Virus                bool     `protobuf:"varint,22,opt,name=virus,proto3" json:"virus,omitempty"`
	Type                 string   `protobuf:"bytes,23,opt,name=type,proto3" json:"type,omitempty"`
	Ts                   int32    `protobuf:"varint,24,opt,name=ts,proto3" json:"ts,omitempty"`
	SubLanguages         []string `protobuf:"bytes,25,rep,name=sub_languages,json=subLanguages,proto3" json:"sub_languages,omitempty"`
	RawSize              int32    `protobuf:"varint,26,opt,name=raw_size,json=rawSize,proto3" json:"raw_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{1}
}

func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (m *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(m, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Movie) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Movie) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *Movie) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *Movie) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *Movie) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *Movie) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Movie) GetPostDate() string {
	if m != nil {
		return m.PostDate
	}
	return ""
}

func (m *Movie) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Movie) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Movie) GetAudioLanguages() []string {
	if m != nil {
		return m.AudioLanguages
	}
	return nil
}

func (m *Movie) GetFullResolution() string {
	if m != nil {
		return m.FullResolution
	}
	return ""
}

func (m *Movie) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

func (m *Movie) GetWidth() string {
	if m != nil {
		return m.Width
	}
	return ""
}

func (m *Movie) GetBps() int32 {
	if m != nil {
		return m.Bps
	}
	return 0
}

func (m *Movie) GetSampleRate() int32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *Movie) GetFps() float64 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *Movie) GetAudioCodec() string {
	if m != nil {
		return m.AudioCodec
	}
	return ""
}

func (m *Movie) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

func (m *Movie) GetPrimaryUrl() string {
	if m != nil {
		return m.PrimaryUrl
	}
	return ""
}

func (m *Movie) GetFallbackUrl() string {
	if m != nil {
		return m.FallbackUrl
	}
	return ""
}

func (m *Movie) GetVirus() bool {
	if m != nil {
		return m.Virus
	}
	return false
}

func (m *Movie) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Movie) GetTs() int32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Movie) GetSubLanguages() []string {
	if m != nil {
		return m.SubLanguages
	}
	return nil
}

func (m *Movie) GetRawSize() int32 {
	if m != nil {
		return m.RawSize
	}
	return 0
}

type SearchResults struct {
	// string base_url = 1;
	// string classic_thumbs = 2;
	Movies []*Movie `protobuf:"bytes,3,rep,name=movies,proto3" json:"movies,omitempty"`
	// string dl_farm = 4;
	// string dl_port = 5;
	// string down_url = 6;
	// Fields        map[string][]string `json:"fields"`
	// Groups        map[string][]int    `json:"groups"`
	// repeated GSColumn gs_columns = 9;
	// int32 h_info = 10;
	// int32 hidden = 11;
	// int32 hthm = 12;
	// string large_thumb = 13;
	// string large_thumb_size = 14;
	NumPages             int32    `protobuf:"varint,15,opt,name=num_pages,json=numPages,proto3" json:"num_pages,omitempty"`
	Page                 int32    `protobuf:"varint,16,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              string   `protobuf:"bytes,17,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Count                int32    `protobuf:"varint,18,opt,name=count,proto3" json:"count,omitempty"`
	Returned             int32    `protobuf:"varint,19,opt,name=returned,proto3" json:"returned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResults) Reset()         { *m = SearchResults{} }
func (m *SearchResults) String() string { return proto.CompactTextString(m) }
func (*SearchResults) ProtoMessage()    {}
func (*SearchResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{2}
}

func (m *SearchResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResults.Unmarshal(m, b)
}
func (m *SearchResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResults.Marshal(b, m, deterministic)
}
func (m *SearchResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResults.Merge(m, src)
}
func (m *SearchResults) XXX_Size() int {
	return xxx_messageInfo_SearchResults.Size(m)
}
func (m *SearchResults) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResults.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResults proto.InternalMessageInfo

func (m *SearchResults) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

func (m *SearchResults) GetNumPages() int32 {
	if m != nil {
		return m.NumPages
	}
	return 0
}

func (m *SearchResults) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchResults) GetPerPage() string {
	if m != nil {
		return m.PerPage
	}
	return ""
}

func (m *SearchResults) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SearchResults) GetReturned() int32 {
	if m != nil {
		return m.Returned
	}
	return 0
}

type SearchRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{3}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	Results              *SearchResults `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{4}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetResults() *SearchResults {
	if m != nil {
		return m.Results
	}
	return nil
}

type DownloadRequest struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{5}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

type Progress struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	BytesPerSecond       int32    `protobuf:"varint,2,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
	BytesCompleted       int32    `protobuf:"varint,3,opt,name=bytes_completed,json=bytesCompleted,proto3" json:"bytes_completed,omitempty"`
	Size                 int32    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Progress             int32    `protobuf:"varint,5,opt,name=progress,proto3" json:"progress,omitempty"`
	Details              *Movie   `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	Error                string   `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Progress) Reset()         { *m = Progress{} }
func (m *Progress) String() string { return proto.CompactTextString(m) }
func (*Progress) ProtoMessage()    {}
func (*Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{6}
}

func (m *Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Progress.Unmarshal(m, b)
}
func (m *Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Progress.Marshal(b, m, deterministic)
}
func (m *Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Progress.Merge(m, src)
}
func (m *Progress) XXX_Size() int {
	return xxx_messageInfo_Progress.Size(m)
}
func (m *Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_Progress proto.InternalMessageInfo

func (m *Progress) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Progress) GetBytesPerSecond() int32 {
	if m != nil {
		return m.BytesPerSecond
	}
	return 0
}

func (m *Progress) GetBytesCompleted() int32 {
	if m != nil {
		return m.BytesCompleted
	}
	return 0
}

func (m *Progress) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Progress) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *Progress) GetDetails() *Movie {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Progress) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ProgressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgressRequest) Reset()         { *m = ProgressRequest{} }
func (m *ProgressRequest) String() string { return proto.CompactTextString(m) }
func (*ProgressRequest) ProtoMessage()    {}
func (*ProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{7}
}

func (m *ProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgressRequest.Unmarshal(m, b)
}
func (m *ProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgressRequest.Marshal(b, m, deterministic)
}
func (m *ProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressRequest.Merge(m, src)
}
func (m *ProgressRequest) XXX_Size() int {
	return xxx_messageInfo_ProgressRequest.Size(m)
}
func (m *ProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressRequest proto.InternalMessageInfo

type ProgressResponse struct {
	ActiveDownloads      map[int32]*Progress `protobuf:"bytes,1,rep,name=active_downloads,json=activeDownloads,proto3" json:"active_downloads,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProgressResponse) Reset()         { *m = ProgressResponse{} }
func (m *ProgressResponse) String() string { return proto.CompactTextString(m) }
func (*ProgressResponse) ProtoMessage()    {}
func (*ProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{8}
}

func (m *ProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgressResponse.Unmarshal(m, b)
}
func (m *ProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgressResponse.Marshal(b, m, deterministic)
}
func (m *ProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressResponse.Merge(m, src)
}
func (m *ProgressResponse) XXX_Size() int {
	return xxx_messageInfo_ProgressResponse.Size(m)
}
func (m *ProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressResponse proto.InternalMessageInfo

func (m *ProgressResponse) GetActiveDownloads() map[int32]*Progress {
	if m != nil {
		return m.ActiveDownloads
	}
	return nil
}

type CompletedRequest struct {
	CompletedId          int32    `protobuf:"varint,1,opt,name=completed_id,json=completedId,proto3" json:"completed_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompletedRequest) Reset()         { *m = CompletedRequest{} }
func (m *CompletedRequest) String() string { return proto.CompactTextString(m) }
func (*CompletedRequest) ProtoMessage()    {}
func (*CompletedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{9}
}

func (m *CompletedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompletedRequest.Unmarshal(m, b)
}
func (m *CompletedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompletedRequest.Marshal(b, m, deterministic)
}
func (m *CompletedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompletedRequest.Merge(m, src)
}
func (m *CompletedRequest) XXX_Size() int {
	return xxx_messageInfo_CompletedRequest.Size(m)
}
func (m *CompletedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompletedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompletedRequest proto.InternalMessageInfo

func (m *CompletedRequest) GetCompletedId() int32 {
	if m != nil {
		return m.CompletedId
	}
	return 0
}

type CompletedResponse struct {
	Completed            map[int32]*Progress `protobuf:"bytes,1,rep,name=completed,proto3" json:"completed,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CompletedResponse) Reset()         { *m = CompletedResponse{} }
func (m *CompletedResponse) String() string { return proto.CompactTextString(m) }
func (*CompletedResponse) ProtoMessage()    {}
func (*CompletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{10}
}

func (m *CompletedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompletedResponse.Unmarshal(m, b)
}
func (m *CompletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompletedResponse.Marshal(b, m, deterministic)
}
func (m *CompletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompletedResponse.Merge(m, src)
}
func (m *CompletedResponse) XXX_Size() int {
	return xxx_messageInfo_CompletedResponse.Size(m)
}
func (m *CompletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompletedResponse proto.InternalMessageInfo

func (m *CompletedResponse) GetCompleted() map[int32]*Progress {
	if m != nil {
		return m.Completed
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "moviedownloader.Empty")
	proto.RegisterType((*Movie)(nil), "moviedownloader.Movie")
	proto.RegisterType((*SearchResults)(nil), "moviedownloader.SearchResults")
	proto.RegisterType((*SearchRequest)(nil), "moviedownloader.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "moviedownloader.SearchResponse")
	proto.RegisterType((*DownloadRequest)(nil), "moviedownloader.DownloadRequest")
	proto.RegisterType((*Progress)(nil), "moviedownloader.Progress")
	proto.RegisterType((*ProgressRequest)(nil), "moviedownloader.ProgressRequest")
	proto.RegisterType((*ProgressResponse)(nil), "moviedownloader.ProgressResponse")
	proto.RegisterMapType((map[int32]*Progress)(nil), "moviedownloader.ProgressResponse.ActiveDownloadsEntry")
	proto.RegisterType((*CompletedRequest)(nil), "moviedownloader.CompletedRequest")
	proto.RegisterType((*CompletedResponse)(nil), "moviedownloader.CompletedResponse")
	proto.RegisterMapType((map[int32]*Progress)(nil), "moviedownloader.CompletedResponse.CompletedEntry")
}

func init() { proto.RegisterFile("rpc/service.proto", fileDescriptor_ec64d44e618a02a6) }

var fileDescriptor_ec64d44e618a02a6 = []byte{
	// 1020 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xee, 0xda, 0x59, 0xff, 0x1c, 0x27, 0xb6, 0x33, 0x4d, 0xc3, 0xc4, 0x54, 0xad, 0xb3, 0x08,
	0x61, 0x21, 0x14, 0x97, 0x20, 0x50, 0xd5, 0x1b, 0x04, 0x4d, 0x2f, 0x40, 0x20, 0xa2, 0x0d, 0x08,
	0xa9, 0x52, 0x65, 0x8d, 0x77, 0x4f, 0x9c, 0xa5, 0xeb, 0x9d, 0xed, 0xcc, 0x6c, 0x82, 0x7b, 0xc9,
	0x2b, 0xf0, 0x3c, 0xf0, 0x12, 0xf0, 0x08, 0xbc, 0x00, 0x2f, 0x80, 0xd0, 0x9c, 0xd9, 0xb5, 0x93,
	0x18, 0xb7, 0x37, 0xdc, 0xcd, 0xf9, 0xce, 0x77, 0x66, 0xce, 0xff, 0x2e, 0xec, 0xaa, 0x3c, 0x1a,
	0x6b, 0x54, 0x97, 0x49, 0x84, 0x47, 0xb9, 0x92, 0x46, 0xb2, 0xde, 0x5c, 0x5e, 0x26, 0x18, 0xcb,
	0xab, 0x2c, 0x95, 0x22, 0x46, 0x35, 0xb8, 0x3f, 0x93, 0x72, 0x96, 0xe2, 0x58, 0xe4, 0xc9, 0x58,
	0x64, 0x99, 0x34, 0xc2, 0x24, 0x32, 0xd3, 0x8e, 0x1e, 0x34, 0xc1, 0x7f, 0x36, 0xcf, 0xcd, 0x22,
	0xf8, 0xdd, 0x07, 0xff, 0x5b, 0x6b, 0xca, 0xba, 0x50, 0x4b, 0x62, 0xee, 0x0d, 0xbd, 0x51, 0x3b,
	0xac, 0x25, 0x31, 0x1b, 0x40, 0xeb, 0x3c, 0x49, 0x31, 0x13, 0x73, 0xe4, 0x35, 0x42, 0x97, 0x32,
	0xdb, 0x03, 0x3f, 0x92, 0x31, 0x46, 0xbc, 0x4e, 0x0a, 0x27, 0x30, 0x0e, 0x4d, 0x55, 0x64, 0x26,
	0x99, 0x23, 0xdf, 0x22, 0xbc, 0x12, 0xd9, 0x7d, 0x68, 0xe3, 0xcf, 0x06, 0x33, 0x9d, 0xc8, 0x8c,
	0xfb, 0xa4, 0x5b, 0x01, 0xec, 0x01, 0x80, 0x42, 0x2d, 0xd3, 0xc2, 0x7a, 0xc8, 0x1b, 0xa4, 0xbe,
	0x86, 0x30, 0x06, 0x5b, 0x3a, 0x79, 0x8d, 0xbc, 0x49, 0x1a, 0x3a, 0xb3, 0x77, 0xa1, 0x9d, 0x4b,
	0x6d, 0x26, 0xb1, 0x30, 0xc8, 0x5b, 0xce, 0x3d, 0x0b, 0x9c, 0x08, 0x83, 0xd6, 0x11, 0x5d, 0x4c,
	0x7f, 0xc2, 0xc8, 0xf0, 0xb6, 0x73, 0xa4, 0x14, 0xad, 0xe3, 0x33, 0x25, 0x8b, 0x9c, 0x83, 0x73,
	0x9c, 0x04, 0xf6, 0x01, 0xf4, 0x44, 0x11, 0x27, 0x72, 0x92, 0x8a, 0x6c, 0x56, 0x88, 0x19, 0x6a,
	0xde, 0x19, 0xd6, 0x47, 0xed, 0xb0, 0x4b, 0xf0, 0x37, 0x15, 0x6a, 0x89, 0xe7, 0x45, 0x9a, 0x4e,
	0xae, 0xb9, 0xbb, 0x4d, 0x17, 0x75, 0x2d, 0x1c, 0xae, 0x5c, 0xde, 0x87, 0xc6, 0x05, 0x26, 0xb3,
	0x0b, 0xc3, 0x77, 0x48, 0x5f, 0x4a, 0xf6, 0xfd, 0xab, 0x24, 0x36, 0x17, 0xbc, 0xeb, 0xde, 0x27,
	0x81, 0xf5, 0xa1, 0x3e, 0xcd, 0x35, 0xef, 0x0d, 0xbd, 0x91, 0x1f, 0xda, 0x23, 0x7b, 0x08, 0x1d,
	0x2d, 0xe6, 0x79, 0x8a, 0x13, 0x65, 0x03, 0xec, 0x93, 0x06, 0x1c, 0x14, 0xda, 0x10, 0xfb, 0x50,
	0x3f, 0xcf, 0x35, 0xdf, 0x1d, 0x7a, 0x23, 0x2f, 0xb4, 0x47, 0x6b, 0xe2, 0x82, 0x70, 0x95, 0x61,
	0x2e, 0x8d, 0x04, 0x3d, 0xa5, 0xf2, 0xec, 0x43, 0xc3, 0x66, 0x08, 0x15, 0xbf, 0xeb, 0x7c, 0x72,
	0x92, 0x35, 0xcc, 0x55, 0x32, 0x17, 0x6a, 0x31, 0x29, 0x54, 0xca, 0xf7, 0x9c, 0x61, 0x09, 0xfd,
	0xa0, 0x52, 0x76, 0x08, 0xdb, 0xe7, 0x22, 0x4d, 0xa7, 0x22, 0x7a, 0x49, 0x8c, 0x7b, 0xc4, 0xe8,
	0x54, 0x98, 0xa5, 0xec, 0x81, 0x7f, 0x99, 0xa8, 0x42, 0xf3, 0xfd, 0xa1, 0x37, 0x6a, 0x85, 0x4e,
	0xb0, 0x85, 0x33, 0x8b, 0x1c, 0xf9, 0x3b, 0xae, 0x70, 0xf6, 0x6c, 0xdb, 0xcc, 0x68, 0xce, 0x29,
	0xa0, 0x9a, 0xd1, 0xec, 0x3d, 0xd8, 0xd1, 0xc5, 0xf4, 0x5a, 0xe6, 0x0f, 0x28, 0xf3, 0xdb, 0xba,
	0x98, 0xae, 0xf2, 0x7e, 0x00, 0x2d, 0x25, 0xae, 0x26, 0xd4, 0x05, 0x03, 0x32, 0x6d, 0x2a, 0x71,
	0x75, 0x96, 0xbc, 0xc6, 0xe0, 0x37, 0x0f, 0x76, 0xce, 0x50, 0xa8, 0xe8, 0x22, 0x44, 0x5d, 0xa4,
	0x46, 0xb3, 0x23, 0x68, 0xd0, 0x30, 0x68, 0x5e, 0x1f, 0xd6, 0x47, 0x9d, 0xe3, 0xfd, 0xa3, 0x5b,
	0xb3, 0x71, 0x44, 0x0d, 0x1f, 0x96, 0x2c, 0xdb, 0x4a, 0x59, 0x31, 0x9f, 0xe4, 0xf4, 0xba, 0xab,
	0x41, 0x2b, 0x2b, 0xe6, 0xa7, 0xf4, 0x32, 0x83, 0x2d, 0xab, 0x28, 0x2b, 0x40, 0x67, 0xeb, 0x4d,
	0x8e, 0x8a, 0x0c, 0xa8, 0x00, 0xed, 0xb0, 0x99, 0xa3, 0xb2, 0x7c, 0x37, 0x18, 0x45, 0x66, 0x28,
	0xfd, 0x7e, 0xe8, 0x04, 0x3b, 0x4a, 0x0a, 0x4d, 0xa1, 0x32, 0x8c, 0x29, 0xf7, 0x7e, 0xb8, 0x94,
	0x83, 0xf7, 0x57, 0xee, 0xbf, 0x2a, 0x50, 0x53, 0x8b, 0xbc, 0x2a, 0x50, 0x2d, 0xca, 0x51, 0x74,
	0x42, 0xf0, 0x35, 0x74, 0x97, 0x51, 0xe6, 0x32, 0xd3, 0xc8, 0x1e, 0x43, 0x53, 0xb9, 0x88, 0x89,
	0xd9, 0x39, 0x7e, 0xb0, 0x16, 0xe7, 0x8d, 0xbc, 0x84, 0x15, 0x3d, 0xf8, 0x1c, 0x7a, 0x27, 0x25,
	0xa9, 0x7a, 0xf4, 0x23, 0xf0, 0xc9, 0xb8, 0xbc, 0x6a, 0x53, 0xca, 0x1c, 0x29, 0xf8, 0xdb, 0x83,
	0xd6, 0xa9, 0x92, 0x33, 0x85, 0x5a, 0xdf, 0xd8, 0x13, 0xde, 0xad, 0x3d, 0x31, 0x82, 0xfe, 0x74,
	0x61, 0x50, 0x4f, 0x6c, 0xbe, 0x34, 0x46, 0x32, 0x8b, 0x69, 0x97, 0xf8, 0x61, 0x97, 0xf0, 0x53,
	0x54, 0x67, 0x84, 0xda, 0xc9, 0x72, 0xcc, 0x48, 0xda, 0x1e, 0x37, 0x18, 0xd3, 0x6e, 0xa9, 0x88,
	0x4f, 0x2b, 0x74, 0xb9, 0x0c, 0xb6, 0x5c, 0x41, 0x68, 0x19, 0x0c, 0xa0, 0x95, 0x97, 0xee, 0xd0,
	0x76, 0xf1, 0xc3, 0xa5, 0xcc, 0x1e, 0x41, 0x33, 0x46, 0x23, 0x92, 0x54, 0xd3, 0x66, 0xd9, 0x1c,
	0x5b, 0x45, 0xb3, 0x05, 0x40, 0xa5, 0xa4, 0x2a, 0xf7, 0x8d, 0x13, 0x82, 0x5d, 0xe8, 0x55, 0x21,
	0x97, 0x49, 0x0b, 0xfe, 0xf4, 0xa0, 0xbf, 0xc2, 0xca, 0xb2, 0x08, 0xe8, 0x8b, 0xc8, 0x24, 0x97,
	0x38, 0xa9, 0x5e, 0xb0, 0xf5, 0xb1, 0x7d, 0xf8, 0xd9, 0xda, 0xc3, 0xb7, 0x8d, 0x8f, 0xbe, 0x20,
	0xcb, 0xaa, 0x38, 0xfa, 0x59, 0x66, 0xd4, 0x22, 0xec, 0x89, 0x9b, 0xe8, 0xe0, 0x05, 0xec, 0xfd,
	0x17, 0xd1, 0xee, 0x84, 0x97, 0xe8, 0xfa, 0xc6, 0x0f, 0xed, 0x91, 0x8d, 0xc1, 0xbf, 0x14, 0x69,
	0xe1, 0x16, 0x78, 0xe7, 0xf8, 0x60, 0xb3, 0x07, 0x8e, 0xf7, 0xa4, 0xf6, 0xd8, 0x0b, 0x3e, 0x85,
	0xfe, 0x32, 0xdd, 0x55, 0x7f, 0x1c, 0xc2, 0xf6, 0xb2, 0x30, 0x93, 0xf2, 0x33, 0xe1, 0x87, 0x9d,
	0x25, 0xf6, 0x55, 0x6c, 0x07, 0x71, 0xf7, 0x9a, 0x5d, 0x99, 0x8e, 0xef, 0xa0, 0xbd, 0xaa, 0xa8,
	0xcb, 0xc3, 0xc7, 0x6b, 0x5e, 0xac, 0x99, 0xad, 0x10, 0x97, 0x82, 0xd5, 0x1d, 0x83, 0x1f, 0xa1,
	0x7b, 0x53, 0xf9, 0x3f, 0x85, 0x7d, 0xfc, 0x4f, 0x0d, 0xf6, 0xa9, 0x13, 0x4e, 0x96, 0xbc, 0x33,
	0xf7, 0x89, 0x65, 0x2f, 0xa0, 0xe1, 0x46, 0x89, 0x6d, 0x9e, 0x31, 0xca, 0xd3, 0xe0, 0xe1, 0xe6,
	0x19, 0xa4, 0xc0, 0x02, 0xf6, 0xcb, 0x1f, 0x7f, 0xfd, 0x5a, 0xdb, 0x0e, 0x9a, 0x63, 0x4d, 0x8a,
	0x27, 0xde, 0x87, 0xec, 0x39, 0xb4, 0xaa, 0x37, 0xd9, 0x70, 0xed, 0x82, 0x5b, 0xa3, 0x3a, 0x58,
	0xef, 0x5f, 0xf7, 0x25, 0xdf, 0xa3, 0x9b, 0xbb, 0x41, 0x7b, 0x5c, 0xa9, 0xec, 0xdd, 0x67, 0xd7,
	0x26, 0x75, 0xf8, 0x86, 0x06, 0x74, 0x77, 0x1f, 0xbe, 0xb5, 0x45, 0x83, 0x3b, 0x8f, 0x3c, 0xf6,
	0x3d, 0xb4, 0x57, 0x03, 0x79, 0xf8, 0xa6, 0x72, 0xba, 0x6b, 0x83, 0xb7, 0x57, 0x3c, 0xb8, 0xf3,
	0xe5, 0xbd, 0xe7, 0x77, 0xed, 0x7f, 0xcd, 0x2d, 0xea, 0xb4, 0x41, 0x7f, 0x2c, 0x9f, 0xfc, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x80, 0x7c, 0xa1, 0x52, 0xf5, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MovieDownloaderServiceClient is the client API for MovieDownloaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MovieDownloaderServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*Empty, error)
	Progress(ctx context.Context, in *ProgressRequest, opts ...grpc.CallOption) (MovieDownloaderService_ProgressClient, error)
	Completed(ctx context.Context, in *CompletedRequest, opts ...grpc.CallOption) (*CompletedResponse, error)
}

type movieDownloaderServiceClient struct {
	cc *grpc.ClientConn
}

func NewMovieDownloaderServiceClient(cc *grpc.ClientConn) MovieDownloaderServiceClient {
	return &movieDownloaderServiceClient{cc}
}

func (c *movieDownloaderServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/moviedownloader.MovieDownloaderService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieDownloaderServiceClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/moviedownloader.MovieDownloaderService/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieDownloaderServiceClient) Progress(ctx context.Context, in *ProgressRequest, opts ...grpc.CallOption) (MovieDownloaderService_ProgressClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MovieDownloaderService_serviceDesc.Streams[0], "/moviedownloader.MovieDownloaderService/Progress", opts...)
	if err != nil {
		return nil, err
	}
	x := &movieDownloaderServiceProgressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MovieDownloaderService_ProgressClient interface {
	Recv() (*ProgressResponse, error)
	grpc.ClientStream
}

type movieDownloaderServiceProgressClient struct {
	grpc.ClientStream
}

func (x *movieDownloaderServiceProgressClient) Recv() (*ProgressResponse, error) {
	m := new(ProgressResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *movieDownloaderServiceClient) Completed(ctx context.Context, in *CompletedRequest, opts ...grpc.CallOption) (*CompletedResponse, error) {
	out := new(CompletedResponse)
	err := c.cc.Invoke(ctx, "/moviedownloader.MovieDownloaderService/Completed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MovieDownloaderServiceServer is the server API for MovieDownloaderService service.
type MovieDownloaderServiceServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Download(context.Context, *DownloadRequest) (*Empty, error)
	Progress(*ProgressRequest, MovieDownloaderService_ProgressServer) error
	Completed(context.Context, *CompletedRequest) (*CompletedResponse, error)
}

// UnimplementedMovieDownloaderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMovieDownloaderServiceServer struct {
}

func (*UnimplementedMovieDownloaderServiceServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedMovieDownloaderServiceServer) Download(ctx context.Context, req *DownloadRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedMovieDownloaderServiceServer) Progress(req *ProgressRequest, srv MovieDownloaderService_ProgressServer) error {
	return status.Errorf(codes.Unimplemented, "method Progress not implemented")
}
func (*UnimplementedMovieDownloaderServiceServer) Completed(ctx context.Context, req *CompletedRequest) (*CompletedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Completed not implemented")
}

func RegisterMovieDownloaderServiceServer(s *grpc.Server, srv MovieDownloaderServiceServer) {
	s.RegisterService(&_MovieDownloaderService_serviceDesc, srv)
}

func _MovieDownloaderService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieDownloaderServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moviedownloader.MovieDownloaderService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieDownloaderServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieDownloaderService_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieDownloaderServiceServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moviedownloader.MovieDownloaderService/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieDownloaderServiceServer).Download(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieDownloaderService_Progress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProgressRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MovieDownloaderServiceServer).Progress(m, &movieDownloaderServiceProgressServer{stream})
}

type MovieDownloaderService_ProgressServer interface {
	Send(*ProgressResponse) error
	grpc.ServerStream
}

type movieDownloaderServiceProgressServer struct {
	grpc.ServerStream
}

func (x *movieDownloaderServiceProgressServer) Send(m *ProgressResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MovieDownloaderService_Completed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompletedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieDownloaderServiceServer).Completed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moviedownloader.MovieDownloaderService/Completed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieDownloaderServiceServer).Completed(ctx, req.(*CompletedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MovieDownloaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moviedownloader.MovieDownloaderService",
	HandlerType: (*MovieDownloaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _MovieDownloaderService_Search_Handler,
		},
		{
			MethodName: "Download",
			Handler:    _MovieDownloaderService_Download_Handler,
		},
		{
			MethodName: "Completed",
			Handler:    _MovieDownloaderService_Completed_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Progress",
			Handler:       _MovieDownloaderService_Progress_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc/service.proto",
}
